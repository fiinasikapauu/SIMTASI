generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model topikta {
  id_topikta     Int              @id @default(autoincrement())
  topik          String           @db.VarChar(255)
  dosen          String           @db.VarChar(255)
  waktu          DateTime         @default(now()) @db.Timestamp(0)
  pendaftaran_ta pendaftaran_ta[]
}

model user {
  email_user       String             @id 
  nama             String
  nomorInduk       String             @unique(map: "User_nomorInduk_key")
  role             user_role
  password         String
  beban_bimbingan Int   @default(0) // Berikan nilai default, misalnya 0
  kalender_sidang  kalender_sidang[]
  konsultasi       konsultasi[]
  pendaftaran_ta   pendaftaran_ta[]
  proposal_ta      proposal_ta[]
  revisi_laporan   revisi_laporan[]
  seminar_hasil    seminar_hasil[]
  sidang_ta        sidang_ta[]
  timeline_project timeline_project[]
  laporan_kemajuan laporan_kemajuan[]
  feedback         feedback[]         // Relasi balik ke model feedback
  jadwal_sidang_seminar jadwal_sidang_seminar[] @relation("AdminJadwal")
}

model kalender_sidang {
  id_kalender  Int      @id @default(autoincrement())
  email_user   String
  tanggal      DateTime
  jenis_sidang String
  user         user     @relation(fields: [email_user], references: [email_user], map: "Kalender_Sidang_email_user_fkey")

  @@index([email_user], map: "Kalender_Sidang_email_user_fkey")
}

model konsultasi {
  id_konsultasi      Int      @id @default(autoincrement())
  email_user         String
  tanggal_konsultasi DateTime
  dosen_pembimbing   String
  status             String
  user               user     @relation(fields: [email_user], references: [email_user], map: "Konsultasi_email_user_fkey")

  @@index([email_user], map: "Konsultasi_email_user_fkey")
}

model pendaftaran_ta {
  id_pendaftaran      Int          @id @default(autoincrement())
  email_user          String
  id_topikta          Int
  judul_ta            String
  tanggal_daftar      DateTime
  status_approval     String
  id_dosen_pembimbing String

  // Relasi
  user        user        @relation(fields: [email_user], references: [email_user])
  topikta     topikta     @relation(fields: [id_topikta], references: [id_topikta])
  sidang_ta   sidang_ta?  @relation("PendaftaranSidang") // <-- cukup field relasi saja

  @@index([email_user])
  @@index([id_topikta])
}

model proposal_ta {
  id_proposal    Int      @id @default(autoincrement())
  email_user     String
  file_proposal  String
  tanggal_upload DateTime
  status_review  String
  feedback_dosen String
  user           user     @relation(fields: [email_user], references: [email_user], map: "Proposal_TA_email_user_fkey")

  @@index([email_user], map: "Proposal_TA_email_user_fkey")
}

model revisi_laporan {
  id_revisi      Int      @id @default(autoincrement())
  email_user     String
  file_laporan   String
  tanggal_upload DateTime
  feedback_dosen String
  status         String
  user           user     @relation(fields: [email_user], references: [email_user], map: "Revisi_Laporan_email_user_fkey")

  @@index([email_user], map: "Revisi_Laporan_email_user_fkey")
}

model seminar_hasil {
  id_semhas      Int      @id @default(autoincrement())
  email_user     String
  file_draft     String
  tanggal_daftar DateTime
  status         String
  jadwal         DateTime
  user           user     @relation(fields: [email_user], references: [email_user], map: "Seminar_Hasil_email_user_fkey")

  @@index([email_user], map: "Seminar_Hasil_email_user_fkey")
}

model sidang_ta {
  id_sidang        Int       @id @default(autoincrement())
  id_pendaftaran   Int       @unique             // FK + unique â†’ one-to-one
  email_user       String
  file_draft_sidang String
  tanggal_daftar    DateTime
  jadwal            DateTime
  nilai_akhir       Float
  user              user     @relation(fields: [email_user], references: [email_user], map: "Sidang_TA_email_user_fkey")

  pendaftaran_ta   pendaftaran_ta @relation("PendaftaranSidang", fields: [id_pendaftaran], references: [id_pendaftaran])
  @@index([email_user])
}


model timeline_project {
  id_timeline     Int      @id @default(autoincrement())
  email_user      String
  tahapan         String
  tanggal_mulai   DateTime
  tanggal_selesai DateTime
  status          String
  user            user     @relation(fields: [email_user], references: [email_user], map: "Timeline_Project_email_user_fkey")

  @@index([email_user], map: "Timeline_Project_email_user_fkey")
}

model laporan_kemajuan {
  id_laporan        Int      @id @default(autoincrement())
  email_user        String
  file_laporan      String
  tanggal_upload    DateTime
  status_review     String
  feedback_dosen    String
  user              user     @relation(fields: [email_user], references: [email_user], map: "Laporan_Kemajuan_email_user_fkey")

  @@index([email_user], map: "Laporan_Kemajuan_email_user_fkey")
}

model feedback {
  id_feedback   Int      @id @default(autoincrement())
  email_user    String
  tanggal       DateTime
  topik_konsultasi String  // Menambahkan field untuk topik konsultasi
  feedback_text String
  user          user     @relation(fields: [email_user], references: [email_user], map: "Feedback_email_user_fkey")

  @@index([email_user], map: "Feedback_email_user_fkey")
}

enum user_role {
  ADMIN
  MAHASISWA
  DOSEN
}

model jadwal_sidang_seminar {
  id_jadwal        Int      @id @default(autoincrement())
  jenis_jadwal     String   // "Sidang" or "Seminar"
  tanggal          DateTime
  waktu            DateTime
  admin_id         String
  admin            user     @relation("AdminJadwal", fields: [admin_id], references: [email_user])

  @@index([admin_id], map: "Jadwal_Sidang_Seminar_admin_fkey")
}